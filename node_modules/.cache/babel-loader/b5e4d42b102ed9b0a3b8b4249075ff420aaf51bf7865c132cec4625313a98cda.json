{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      console.log(state, action);\n      const newItem = action.payload;\n      const existing = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existing) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existing.quantity++;\n        existing.totalPrice = existing.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      state.totalQuantity--;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = cartData => {\n  return dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Here is a notif',\n      message: \"Sending Cart data\"\n    }));\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemToCart","state","action","console","log","newItem","payload","existing","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","existingItem","filter","sendCartData","cartData","dispatch","uiActions","showNotification","status","message","cartActions","actions"],"sources":["C:/Users/user/Documents/React/advance-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: { \r\n        items: [],\r\n        totalQuantity: 0,\r\n        totalAmount: 0\r\n\r\n     },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            console.log(state, action);\r\n            const newItem = action.payload\r\n            const existing = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++\r\n            if (!existing) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            }\r\n            else {\r\n                existing.quantity++;\r\n                existing.totalPrice= existing.totalPrice+newItem.price\r\n            }\r\n            \r\n       },\r\n       removeItemFromCart(state, action){\r\n        const id = action.payload;\r\n        state.totalQuantity--;\r\n        const existingItem = state.items.find(item => item.id ===id)\r\n        if(existingItem.quantity ===1){\r\n            state.items = state.items.filter(item => item.id !==id);\r\n        }\r\n        else{\r\n            existingItem.quantity--;\r\n            existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n        }\r\n       }\r\n    }\r\n});\r\n const sendCartData = (cartData)=>{\r\n    return (dispatch)=> {\r\n        dispatch(uiActions.showNotification({\r\n            status:'pending',\r\n            title:'Here is a notif',\r\n            message:\"Sending Cart data\"\r\n          }))\r\n    }\r\n }\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,WAAW,EAAE;EAEhB,CAAC;EACFC,QAAQ,EAAE;IACNC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBC,OAAO,CAACC,GAAG,CAACH,KAAK,EAAEC,MAAM,CAAC;MAC1B,MAAMG,OAAO,GAAGH,MAAM,CAACI,OAAO;MAC9B,MAAMC,QAAQ,GAAGN,KAAK,CAACL,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACjET,KAAK,CAACJ,aAAa,EAAE;MACrB,IAAI,CAACU,QAAQ,EAAE;QACXN,KAAK,CAACL,KAAK,CAACe,IAAI,CAAC;UACbD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBlB,IAAI,EAAEW,OAAO,CAACU;QAClB,CAAC,CAAC;MACN,CAAC,MACI;QACDR,QAAQ,CAACM,QAAQ,EAAE;QACnBN,QAAQ,CAACO,UAAU,GAAEP,QAAQ,CAACO,UAAU,GAACT,OAAO,CAACO,KAAK;MAC1D;IAEL,CAAC;IACDI,kBAAkBA,CAACf,KAAK,EAAEC,MAAM,EAAC;MAChC,MAAMQ,EAAE,GAAGR,MAAM,CAACI,OAAO;MACzBL,KAAK,CAACJ,aAAa,EAAE;MACrB,MAAMoB,YAAY,GAAGhB,KAAK,CAACL,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAIA,EAAE,CAAC;MAC5D,IAAGO,YAAY,CAACJ,QAAQ,KAAI,CAAC,EAAC;QAC1BZ,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACsB,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAIA,EAAE,CAAC;MAC3D,CAAC,MACG;QACAO,YAAY,CAACJ,QAAQ,EAAE;QACvBI,YAAY,CAACH,UAAU,GAAGG,YAAY,CAACH,UAAU,GAAGG,YAAY,CAACL,KAAK;MAC1E;IACD;EACH;AACJ,CAAC,CAAC;AACD,MAAMO,YAAY,GAAIC,QAAQ,IAAG;EAC9B,OAAQC,QAAQ,IAAI;IAChBA,QAAQ,CAACC,SAAS,CAACC,gBAAgB,CAAC;MAChCC,MAAM,EAAC,SAAS;MAChBT,KAAK,EAAC,iBAAiB;MACvBU,OAAO,EAAC;IACV,CAAC,CAAC,CAAC;EACT,CAAC;AACJ,CAAC;AACF,OAAO,MAAMC,WAAW,GAAGjC,SAAS,CAACkC,OAAO;AAC5C,eAAelC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}