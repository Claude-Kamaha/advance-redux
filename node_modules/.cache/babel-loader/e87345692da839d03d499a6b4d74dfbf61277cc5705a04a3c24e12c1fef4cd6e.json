{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    changed: false,\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      items = state.action.payload.item;\n      totalQuantity = state.action.payload.totalPrice;\n    },\n    addItemToCart(state, action) {\n      console.log(state, action);\n      const newItem = action.payload;\n      const existing = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      changed = true;\n      if (!existing) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existing.quantity++;\n        existing.totalPrice = existing.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      state.totalQuantity--;\n      changed = true;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","changed","totalQuantity","totalAmount","reducers","replaceCart","state","action","payload","item","totalPrice","addItemToCart","console","log","newItem","existing","find","id","push","price","quantity","title","removeItemFromCart","existingItem","filter","cartActions","actions"],"sources":["C:/Users/user/Documents/React/advance-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: { \r\n        items: [],\r\n        changed: false,\r\n        totalQuantity: 0,\r\n        totalAmount: 0\r\n\r\n     },\r\n    reducers: {\r\n        replaceCart(state, action){\r\n            items = state.action.payload.item;\r\n            totalQuantity = state.action.payload.totalPrice\r\n        },\r\n        addItemToCart(state, action) {\r\n            console.log(state, action);\r\n            const newItem = action.payload\r\n            const existing = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            changed = true;\r\n            if (!existing) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            }\r\n            else {\r\n                existing.quantity++;\r\n                existing.totalPrice= existing.totalPrice+newItem.price\r\n            }\r\n            \r\n       },\r\n       removeItemFromCart(state, action){\r\n        const id = action.payload;\r\n        state.totalQuantity--;\r\n        changed = true;\r\n        const existingItem = state.items.find(item => item.id ===id)\r\n        if(existingItem.quantity ===1){\r\n            state.items = state.items.filter(item => item.id !==id);\r\n        }\r\n        else{\r\n            existingItem.quantity--;\r\n            existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n        }\r\n       }\r\n    }\r\n});\r\n  \r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,KAAK;IACdC,aAAa,EAAE,CAAC;IAChBC,WAAW,EAAE;EAEhB,CAAC;EACFC,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACtBP,KAAK,GAAGM,KAAK,CAACC,MAAM,CAACC,OAAO,CAACC,IAAI;MACjCP,aAAa,GAAGI,KAAK,CAACC,MAAM,CAACC,OAAO,CAACE,UAAU;IACnD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACzBK,OAAO,CAACC,GAAG,CAACP,KAAK,EAAEC,MAAM,CAAC;MAC1B,MAAMO,OAAO,GAAGP,MAAM,CAACC,OAAO;MAC9B,MAAMO,QAAQ,GAAGT,KAAK,CAACN,KAAK,CAACgB,IAAI,CAACP,IAAI,IAAIA,IAAI,CAACQ,EAAE,KAAKH,OAAO,CAACG,EAAE,CAAC;MACjEX,KAAK,CAACJ,aAAa,EAAE;MACrBD,OAAO,GAAG,IAAI;MACd,IAAI,CAACc,QAAQ,EAAE;QACXT,KAAK,CAACN,KAAK,CAACkB,IAAI,CAAC;UACbD,EAAE,EAAEH,OAAO,CAACG,EAAE;UACdE,KAAK,EAAEL,OAAO,CAACK,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXV,UAAU,EAAEI,OAAO,CAACK,KAAK;UACzBrB,IAAI,EAAEgB,OAAO,CAACO;QAClB,CAAC,CAAC;MACN,CAAC,MACI;QACDN,QAAQ,CAACK,QAAQ,EAAE;QACnBL,QAAQ,CAACL,UAAU,GAAEK,QAAQ,CAACL,UAAU,GAACI,OAAO,CAACK,KAAK;MAC1D;IAEL,CAAC;IACDG,kBAAkBA,CAAChB,KAAK,EAAEC,MAAM,EAAC;MAChC,MAAMU,EAAE,GAAGV,MAAM,CAACC,OAAO;MACzBF,KAAK,CAACJ,aAAa,EAAE;MACrBD,OAAO,GAAG,IAAI;MACd,MAAMsB,YAAY,GAAGjB,KAAK,CAACN,KAAK,CAACgB,IAAI,CAACP,IAAI,IAAIA,IAAI,CAACQ,EAAE,KAAIA,EAAE,CAAC;MAC5D,IAAGM,YAAY,CAACH,QAAQ,KAAI,CAAC,EAAC;QAC1Bd,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACwB,MAAM,CAACf,IAAI,IAAIA,IAAI,CAACQ,EAAE,KAAIA,EAAE,CAAC;MAC3D,CAAC,MACG;QACAM,YAAY,CAACH,QAAQ,EAAE;QACvBG,YAAY,CAACb,UAAU,GAAGa,YAAY,CAACb,UAAU,GAAGa,YAAY,CAACJ,KAAK;MAC1E;IACD;EACH;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAG5B,SAAS,CAAC6B,OAAO;AAC5C,eAAe7B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}